// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = "postgres://default:OufXVMrzYL47@ep-snowy-wind-29956503-pooler.us-east-1.postgres.vercel-storage.com/verceldb?pgbouncer=true&connect_timeout=15" //env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = "postgres://default:OufXVMrzYL47@ep-snowy-wind-29956503.us-east-1.postgres.vercel-storage.com/verceldb" //env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}
// This is your Prisma schema file


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Link {
  id         String  @id @default(cuid())
  userId     String
  title      String
  url        String
  background String
  published Boolean @default(true)
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  links         Link[]    // Nouvelle relation avec Link
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
